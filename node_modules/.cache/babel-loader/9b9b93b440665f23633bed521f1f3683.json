{"ast":null,"code":"var _jsxFileName = \"/Users/jasonjin/Desktop/ramp-fe-challenge/src/components/InputSelect/index.tsx\",\n    _s = $RefreshSig$();\n\nimport Downshift from \"downshift\";\nimport { useCallback, useState } from \"react\";\nimport classNames from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function InputSelect(_ref) {\n  _s();\n\n  let {\n    label,\n    defaultValue,\n    onChange: consumerOnChange,\n    items,\n    parseItem,\n    isLoading,\n    loadingLabel\n  } = _ref;\n  const [selectedValue, setSelectedValue] = useState(defaultValue !== null && defaultValue !== void 0 ? defaultValue : null);\n  const onChange = useCallback(selectedItem => {\n    if (selectedItem === null || parseItem(selectedItem).value === '') {\n      console.error(\"Error: Employee id cannot be empty\");\n      return;\n    }\n\n    consumerOnChange(selectedItem);\n    setSelectedValue(selectedItem);\n  }, [consumerOnChange, parseItem]);\n  return /*#__PURE__*/_jsxDEV(Downshift, {\n    id: \"RampSelect\",\n    onChange: onChange,\n    selectedItem: selectedValue,\n    itemToString: item => item ? parseItem(item).label : \"\",\n    children: _ref2 => {\n      let {\n        getItemProps,\n        getLabelProps,\n        getMenuProps,\n        isOpen,\n        highlightedIndex,\n        selectedItem,\n        getToggleButtonProps,\n        inputValue\n      } = _ref2;\n      const toggleProps = getToggleButtonProps();\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RampInputSelect--root\",\n        style: {\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", { ...getLabelProps(),\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"RampBreak--xs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"RampInputSelect--input\",\n          onClick: toggleProps.onClick,\n          children: inputValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classNames(\"RampInputSelect--dropdown-container\", {\n            \"RampInputSelect--dropdown-container-opened\": isOpen\n          }),\n          ...getMenuProps(),\n          style: {\n            position: 'absolute',\n            width: '100%',\n            zIndex: 1000\n          },\n          children: renderItems()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this);\n\n      function renderItems() {\n        if (!isOpen) {\n          return null;\n        }\n\n        if (isLoading) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"RampInputSelect--dropdown-item\",\n            children: [loadingLabel, \"...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 20\n          }, this);\n        }\n\n        if (items.length === 0) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"RampInputSelect--dropdown-item\",\n            children: \"No items\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 20\n          }, this);\n        }\n\n        return items.map((item, index) => {\n          const parsedItem = parseItem(item);\n          return /*#__PURE__*/_jsxDEV(\"div\", { ...getItemProps({\n              key: parsedItem.value,\n              index,\n              item,\n              className: classNames(\"RampInputSelect--dropdown-item\", {\n                \"RampInputSelect--dropdown-item-highlighted\": highlightedIndex === index,\n                \"RampInputSelect--dropdown-item-selected\": selectedItem && parseItem(selectedItem).value === parsedItem.value\n              })\n            }),\n            children: parsedItem.label\n          }, parsedItem.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this);\n        });\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(InputSelect, \"lqW3k6Y9RRCMLTzZa91p08P/8Y8=\");\n\n_c = InputSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputSelect\");","map":{"version":3,"names":["Downshift","useCallback","useState","classNames","InputSelect","label","defaultValue","onChange","consumerOnChange","items","parseItem","isLoading","loadingLabel","selectedValue","setSelectedValue","selectedItem","value","console","error","item","getItemProps","getLabelProps","getMenuProps","isOpen","highlightedIndex","getToggleButtonProps","inputValue","toggleProps","position","onClick","width","zIndex","renderItems","length","map","index","parsedItem","key","className"],"sources":["/Users/jasonjin/Desktop/ramp-fe-challenge/src/components/InputSelect/index.tsx"],"sourcesContent":["import Downshift from \"downshift\";\nimport { useCallback, useState } from \"react\";\nimport classNames from \"classnames\";\nimport {\n  InputSelectOnChange,\n  InputSelectProps\n} from \"./types\";\n\nexport function InputSelect<TItem>({\n  label,\n  defaultValue,\n  onChange: consumerOnChange,\n  items,\n  parseItem,\n  isLoading,\n  loadingLabel,\n}: InputSelectProps<TItem>) {\n  const [selectedValue, setSelectedValue] = useState<TItem | null>(defaultValue ?? null);\n\n  const onChange = useCallback<InputSelectOnChange<TItem>>(\n    (selectedItem) => {\n      if (selectedItem === null || parseItem(selectedItem).value === '') {\n        console.error(\"Error: Employee id cannot be empty\");\n        return;\n      }\n      consumerOnChange(selectedItem);\n      setSelectedValue(selectedItem);\n    },\n    [consumerOnChange, parseItem]\n  );\n\n  return (\n    <Downshift<TItem>\n      id=\"RampSelect\"\n      onChange={onChange}\n      selectedItem={selectedValue}\n      itemToString={(item) => (item ? parseItem(item).label : \"\")}\n    >\n      {({\n        getItemProps,\n        getLabelProps,\n        getMenuProps,\n        isOpen,\n        highlightedIndex,\n        selectedItem,\n        getToggleButtonProps,\n        inputValue,\n      }) => {\n        const toggleProps = getToggleButtonProps();\n\n        return (\n          <div className=\"RampInputSelect--root\" style={{ position: 'relative' }}>\n            <label {...getLabelProps()}>{label}</label>\n            <div className=\"RampBreak--xs\" />\n            <div\n              className=\"RampInputSelect--input\"\n              onClick={toggleProps.onClick}\n            >\n              {inputValue}\n            </div>\n            <div\n              className={classNames(\"RampInputSelect--dropdown-container\", {\n                \"RampInputSelect--dropdown-container-opened\": isOpen,\n              })}\n              {...getMenuProps()}\n              style={{ position: 'absolute', width: '100%', zIndex: 1000 }}\n            >\n              {renderItems()}\n            </div>\n          </div>\n        );\n\n        function renderItems() {\n          if (!isOpen) {\n            return null;\n          }\n\n          if (isLoading) {\n            return <div className=\"RampInputSelect--dropdown-item\">{loadingLabel}...</div>;\n          }\n\n          if (items.length === 0) {\n            return <div className=\"RampInputSelect--dropdown-item\">No items</div>;\n          }\n\n          return items.map((item, index) => {\n            const parsedItem = parseItem(item);\n            return (\n              <div\n                key={parsedItem.value}\n                {...getItemProps({\n                  key: parsedItem.value,\n                  index,\n                  item,\n                  className: classNames(\"RampInputSelect--dropdown-item\", {\n                    \"RampInputSelect--dropdown-item-highlighted\": highlightedIndex === index,\n                    \"RampInputSelect--dropdown-item-selected\":\n                      selectedItem && parseItem(selectedItem).value === parsedItem.value,\n                  }),\n                })}\n              >\n                {parsedItem.label}\n              </div>\n            );\n          });\n        }\n      }}\n    </Downshift>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}